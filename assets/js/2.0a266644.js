(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{58:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"定制开发项目模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制开发项目模板","aria-hidden":"true"}},[t._v("#")]),t._v(" 定制开发项目模板")]),a("p",[t._v("有了前面几篇文章的铺垫，我相信我们回过头来再看看用 "),a("code",[t._v("vue-cli")]),t._v(" 脚手架工具初始化的项目，就很好理解了。本篇将带着大家全面认识下用 "),a("code",[t._v("vue-cli")]),t._v(" 脚手架工具初始化的项目，并会讲解如何定制化自己的项目模板。")]),a("h2",{attrs:{id:"初始化项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化项目")]),a("p",[t._v("先全局安装 "),a("a",{attrs:{href:"https://github.com/vuejs/vue-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-cli")]),t._v(" 脚手架工具：")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" -g vue-cli\n")])]),a("p",[t._v("安装完成后，初始化基于 "),a("code",[t._v("webpack")]),t._v(" 的项目模板，按照指示依次填写项目信息和选择需要的模块：")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ vue init webpack vue-pro-demo\n\n? Project name vue-pro-demo\n? Project description A Vue.js project\n? Author yugasun "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("yuga_sun@163.com"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n? Vue build standalone\n? Install vue-router? Yes\n? Use ESLint to lint your code? Yes\n? Pick an ESLint preset Airbnb\n? Set up unit tests No\n? Setup e2e tests with Nightwatch? No\n? Should we run "),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[t._v("`")]),a("span",{attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("install")]),a("span",{attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" you after the project has been created? "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("recommended"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("npm")]),t._v("\n\n   vue-cli · Generated "),a("span",{attrs:{class:"token string"}},[t._v('"vue-pro-demo"')]),a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# Installing project dependencies ...")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# ========================")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# Project initialization finished!")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# ========================")]),t._v("\n\nTo get started:\n\n  "),a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" vue-pro-demo\n  "),a("span",{attrs:{class:"token function"}},[t._v("npm")]),t._v(" run dev\n\nDocumentation can be found at https://vuejs-templates.github.io/webpack\n")])]),a("p",[t._v("执行完成后，当前目录下就会生成命名为 "),a("code",[t._v("vue-pro-demo")]),t._v(" 的项目文件夹，结构如下：")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n├── README.md           "),a("span",{attrs:{class:"token comment"}},[t._v("# 项目说明文件")]),t._v("\n├── build               "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放webpack 构建文件")]),t._v("\n├── config              "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放webpack 配置文件")]),t._v("\n├── index.html          "),a("span",{attrs:{class:"token comment"}},[t._v("# 项目html模板文件")]),t._v("\n├── package.json        "),a("span",{attrs:{class:"token comment"}},[t._v("# 存储项目包依赖，以及项目配置信息")]),t._v("\n├── src                 "),a("span",{attrs:{class:"token comment"}},[t._v("# 开发文件夹，一般业务代码都在这里写")]),t._v("\n└── static              "),a("span",{attrs:{class:"token comment"}},[t._v("# 项目静态资源文件夹")]),t._v("\n\n4 directories, 4 files\n")])]),a("p",[t._v("对于 "),a("code",[t._v("src")]),t._v(" 目录，我们在开发中也会根据文件的功能进行文件夹拆分，比如我个人比较喜欢的结构如下（仅供参考）：")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n├── App.vue             "),a("span",{attrs:{class:"token comment"}},[t._v("# 项目如何组件")]),t._v("\n├── api                 "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放接口相关文件")]),t._v("\n├── assets              "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放项目资源文件，比如图片")]),t._v("\n├── components          "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放通用组件")]),t._v("\n├── directive           "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放全局自定义指令")]),t._v("\n├── filters             "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放全局过滤器")]),t._v("\n├── main.js             "),a("span",{attrs:{class:"token comment"}},[t._v("# 项目入口文件")]),t._v("\n├── mock                "),a("span",{attrs:{class:"token comment"}},[t._v("# mock数据")]),t._v("\n├── router              "),a("span",{attrs:{class:"token comment"}},[t._v("# 路由")]),t._v("\n├── store               "),a("span",{attrs:{class:"token comment"}},[t._v("# 状态管理")]),t._v("\n├── styles              "),a("span",{attrs:{class:"token comment"}},[t._v("# 样式文件")]),t._v("\n├── utils               "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放工具函数")]),t._v("\n└── views               "),a("span",{attrs:{class:"token comment"}},[t._v("# 存放视图类组件")]),t._v("\n")])]),a("p",[t._v("规范的目录结构可以很好的规范化你的开发习惯，代码分工明确，便于维护，当你把锅甩给别人时，别人也不至于太难受，这个体会我想大家都懂的，脏话不宜说太多o(╯□╰)o。")]),a("h2",{attrs:{id:"定制开发项目模板-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制开发项目模板-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 定制开发项目模板")]),a("p",[t._v("每个人在使用官方项目模板开发项目的时候，都或多或少的会修改一些默认的 "),a("code",[t._v("webpack")]),t._v(" 配置，然后添加一些项目经常使用的的插件，也会根据自己需要在 "),a("code",[t._v("src")]),t._v(" 目录下添加一些通用的文件夹目录，比如上面所说到的。")]),a("p",[t._v("这就存在一个问题，每次我们在初始化项目的时候，都需要重复完成这几项操作，作为一个懒癌晚期患者的程序员，又怎么能容忍此类事情发生呢？所以定制化的需求蠢蠢欲动了。")]),a("p",[t._v("下面就介绍下如何对官方的 "),a("a",{attrs:{href:"https://github.com/vuejs-templates/webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack模板")]),t._v(" 进行二次开发。")]),a("h3",{attrs:{id:"二次开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二次开发","aria-hidden":"true"}},[t._v("#")]),t._v(" 二次开发")]),a("p",[t._v("要做到这点，只需要三步：")]),a("ol",[a("li",[t._v("Fork官方源码 "),a("a",{attrs:{href:"https://github.com/vuejs-templates/webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("vuejs-templates/webpack")])]),a("li",[t._v("克隆到本地二次开发，添加自己想要的配置和插件，并 push 到 github")]),a("li",[t._v("初始化项目时，使用我们自己的仓库就行")])]),a("p",[t._v("对于步骤1，会使用github的朋友应该都没问题，但是希望你不要问我，复制一个项目为什么叫 "),a("code",[t._v("fork - 叉子")]),t._v("，更不要看成 "),a("code",[t._v("f**k")]),t._v("。随便搜索下就明白了。")]),a("p",[t._v("接下来，重点介绍下步骤2。")]),a("p",[t._v("克隆项目"),a("a",{attrs:{href:"https://github.com/vuejs-templates/webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("vuejs-templates/webpack")]),t._v("到我们的本地后，你会发现目录结构是这样的：")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n├── LICENSE\n├── README.md\n├── deploy-docs.sh\n├── docs\n├── meta.js\n├── package-lock.json\n├── package.json\n├── scenarios\n├── template\n└── utils\n")])]),a("p",[t._v("这里我们只需要关心 "),a("code",[t._v("template")]),t._v(" 目录就够了，因为这个目录存放的就是我们的项目模板。")]),a("p",[t._v("打开 "),a("code",[t._v("template/src/main.js")]),t._v(" 文件（项目入口文件），代码如下：")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("@@#if_eq build "),a("span",{attrs:{class:"token string"}},[t._v('"standalone"')]),t._v("@@\n"),a("span",{attrs:{class:"token comment"}},[t._v("// The Vue build version to load with the `import` command")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// (runtime-only or standalone) has been set in webpack.base.conf with an alias.")]),t._v("\n@@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("if_eq@@\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'./App'")]),t._v("\n@@#router@@\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" router "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'./router'")]),t._v("\n@@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("router@@\n\nVue"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("productionTip "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/* eslint-disable no-new */")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  el"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  @@#router@@\n  router"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  @@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("router@@\n  @@#if_eq build "),a("span",{attrs:{class:"token string"}},[t._v('"runtime"')]),t._v("@@\n  render"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" h "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("h")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  @@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("if_eq@@\n  @@#if_eq build "),a("span",{attrs:{class:"token string"}},[t._v('"standalone"')]),t._v("@@\n  components"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" App "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'<App/>'")]),t._v("\n  @@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("if_eq@@\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("blockquote",[a("p",[t._v("由于hexo对含有 "),a("code",[t._v("handlebars")]),t._v(" 语法的演示代码编译有问题，所以将花括号进行了修改 "),a("code",[t._v("{ -> @, } -> @")]),t._v("，请结合实际源代码进行阅读。")])]),a("p",[t._v("其中包含了很多 "),a("a",{attrs:{href:"https://github.com/wycats/handlebars.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("handlebars")]),t._v(" 的语法，这里主要用到了 "),a("code",[t._v("if")]),t._v(" 条件判断语法，也很好理解。")]),a("p",[t._v("好了，现在开始添加一个 "),a("a",{attrs:{href:"https://github.com/yugasun/vue-axios-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-axios-plugin")]),t._v(" 模块，步骤如下：")]),a("ol",[a("li",[t._v("在 "),a("code",[t._v("template/package.json")]),t._v(" 的 "),a("code",[t._v("dependencies")]),t._v(" 字段中添加 "),a("code",[t._v("vue-axios-plugin")]),t._v(" 依赖：")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("//....")]),t._v("\n  "),a("span",{attrs:{class:"token string"}},[t._v('"dependencies"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token string"}},[t._v('"vue-axios-plugin"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"@1.2.3"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token string"}},[t._v('"vue"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"@2.5.2"')]),t._v("@@#router@@"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token string"}},[t._v('"vue-router"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"@3.0.1"')]),t._v("@@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("router@@\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n")])]),a("blockquote",[a("p",[t._v("这里 "),a("code",[t._v("@@#router@@")]),t._v(" 是用来判断初始化的时候你是否选择使用 "),a("code",[t._v("vue-router")]),t._v("，如果不选择，就会根据判断移除 "),a("code",[t._v("vue-router")]),t._v(" 依赖，很好理解吧。但是需要特别注意的就是，这里"),a("code",[t._v('"vue": "@2.5.2"')]),t._v(" 末尾的那个逗号（ "),a("code",[t._v(",")]),t._v(" ）也会被移除，所以你在添加自定义依赖后，一定要注意当此类情况发生时，保证初始化后，你项目的 "),a("code",[t._v("package.json")]),t._v(" 文件格式是否合法有效。")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("在 "),a("code",[t._v("template/src/main.js")]),t._v(" 中添加插件注入代码：")])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("@@#if_eq build "),a("span",{attrs:{class:"token string"}},[t._v('"standalone"')]),t._v("@@\n"),a("span",{attrs:{class:"token comment"}},[t._v("// The Vue build version to load with the `import` command")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// (runtime-only or standalone) has been set in webpack.base.conf with an alias.")]),t._v("\n@@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("if_eq@@\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" VueAxiosPlugin "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'vue-axios-plugin'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'./App'")]),t._v("\n@@#router@@\n"),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" router "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'./router'")]),t._v("\n@@"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("router@@\n\nVue"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("use")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VueAxiosPlugin"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nVue"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("productionTip "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])]),a("h3",{attrs:{id:"本地测试使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地测试使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 本地测试使用")]),a("p",[t._v("好了，这样我们的自定义组件已经添加完成了，那么在提交之前，我们还需要先测试下修改后的模板是否有效，运行命令进行初始化：")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("vue init path/to/webpack-template my-project\n")])]),a("p",[t._v("这里 "),a("code",[t._v("vue init")]),t._v(" 的第一个参数 "),a("code",[t._v("path/to/webpack-template")]),t._v(" 就是当前修改后的模板路径，之后还是重复交互式的配置过程，然后运行你的项目就行了。")]),a("p",[t._v("不出意外地话，你的项目会很顺利的 "),a("code",[t._v("npm run dev")]),t._v(" 跑起来，之后我们只需要 "),a("code",[t._v("push")]),t._v(" 到我们自己的 "),a("code",[t._v("github")]),t._v(" 仓库就行了。")]),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用")]),a("p",[t._v("提交以后，项目同事都可以共享这份模板了，用的时候只需要运行以下命令：")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("vue init yugasun/webpack my-project\n")])]),a("blockquote",[a("p",[t._v("这里的 "),a("code",[t._v("yugasun/webpack")]),t._v(" 参数就是告诉 "),a("code",[t._v("vue-cli")]),t._v(" 在初始化的时候到用户 "),a("code",[t._v("yugasun")]),t._v(" 的 github 仓库下载 "),a("code",[t._v("webpack")]),t._v(" 项目模板。")])]),a("p",[t._v("之后你就可以愉快的编写输出你的 "),a("code",[t._v("Hello world")]),t._v(" 了。")]),a("h3",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 补充说明")]),a("p",[t._v("当你你足够熟悉项目模板，你也可以对 "),a("code",[t._v("webpack")]),t._v(" 配置进行更个性化的配置，或者添加 "),a("code",[t._v("vue init")]),t._v(" 时的交互式命令。感兴趣的可以参看下我的个人模板 "),a("a",{attrs:{href:"https://github.com/yugasun/webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("yugasun/webpack")]),t._v("。")]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),a("p",[t._v("第二章有关项目配置篇，到这里就结束了，希望通过这一章的讲解，能够帮助大家了解到，一个完整的前端项目结构是如何实现的。从最基本的标签引入开始到工程化的项目架构，我尽量做到用最傻瓜式的方式来讲解，就是希望即使一个前端新手，也可以很轻松的实现自己工程化的项目配置。重点还是贵在多练习，多总结。")]),a("p",[a("a",{attrs:{href:"https://github.com/yugasun/webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码在此")])]),a("h2",{attrs:{id:"专题目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#专题目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 专题目录")]),a("p",[a("a",{attrs:{href:"https://github.com/yugasun/You-May-Not-Know-Vuejs#%E6%96%87%E7%AB%A0%E7%9B%B4%E9%80%9A%E8%BD%A6",target:"_blank",rel:"noopener noreferrer"}},[t._v("You-May-Not-Know-Vuejs")])])])}],!1,null,null,null);s.default=e.exports}}]);